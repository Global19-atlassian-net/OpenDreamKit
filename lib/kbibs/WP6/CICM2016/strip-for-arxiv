#!/usr/bin/python

import re
import io
import sys
from optparse import OptionParser

usage = r"""usage: %prog [options]

Strip comments and the like from a LaTeX file for submission to arxiv
"""
parser = OptionParser(usage=usage)

parser.set_defaults(proof=True)
parser.add_option("--noproof", action="store_false", dest="proof",
                  help="Whether to strip out proofs")

(options, args) = parser.parse_args()

striped_environments = ['verbatim','comment','computerExample']
if not options.proof:
    striped_environments.append('proof')

input = open(args[0])
data = input.read()
input.close()

pat = re.compile(r"(?s)\\iflongversion\b(?:.(?<!\\iflongversion\b))*?(?:\\else\b\n?((?:.(?<!\\iflongversion\b))*?))?\\fi\b")

data = re.sub("(^%|[^\\\\]%).*", "\\1", data)
data = re.sub(pat, lambda match: "" if match.group(1) is None else match.group(1),  data)
data = re.sub(pat, lambda match: "" if match.group(1) is None else match.group(1),  data)
data = re.sub(r"(?s)\\begin{(?P<env>"+'|'.join(striped_environments)+")}.*?\\end{(?P=env)}", "", data)
# Strips everything after \end{document}
data = re.sub(r"(?s)(\\end{document}).*", r"\1", data)

data = re.sub(r"(?s)( *%)( *%\n)*", r"\1", data)
data = re.sub(r"\n\n(%?\n)*", r"\n\n", data)
# Collapse together successive lines with just %
data = re.sub(r"\n *%", r"", data)
data = re.sub(r"\\TODO{[^{}]*}", r"", data)
data = re.sub(r"\\ednote{[^{}]*}", r"", data)

print data
